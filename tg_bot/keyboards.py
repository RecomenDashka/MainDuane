# tg_bot/keyboards.py
from typing import List, Dict, Any
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from core.logger import get_logger

logger = get_logger("keyboards")


def get_start_keyboard() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏.
    –£–±—Ä–∞–Ω—ã "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" –∏ —É–ø—Ä–æ—â–µ–Ω–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton("üé¨ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="get_recommendations"),
        ],
        [
            InlineKeyboardButton("‚ù§Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã", callback_data="view_saved_movies"),
            InlineKeyboardButton("üìú –ò—Å—Ç–æ—Ä–∏—è", callback_data="view_history"),
        ],
        [
            InlineKeyboardButton("‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="start_feedback"),
        ]
    ])
    logger.info("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.")
    return keyboard


def get_rating_keyboard(movie_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ñ–∏–ª—å–º–∞ (–æ—Ç 0 –¥–æ 10).
    –ö–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –¥–≤–∞ —Ä—è–¥–∞ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏.
    """
    rating_buttons = []
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É 0
    rating_buttons.append(InlineKeyboardButton("0", callback_data=f"rate:{movie_id}:0"))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Ç 1 –¥–æ 10
    for i in range(1, 11):
        rating_buttons.append(InlineKeyboardButton(str(i), callback_data=f"rate:{movie_id}:{i}"))

    # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –¥–≤–∞ —Ä—è–¥–∞: 0-5 –∏ 6-10 (6 –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É)
    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –Ω–µ –¥–µ–ª–∏—Ç—Å—è —Ä–æ–≤–Ω–æ, –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä—è–¥ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
    rows = []
    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: 0-5
    if len(rating_buttons) >= 6:
        rows.append(rating_buttons[0:6])
        # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: 6-10
        rows.append(rating_buttons[6:11])
    else:  # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –º–µ–Ω—å—à–µ 11 –∫–Ω–æ–ø–æ–∫ (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å, –Ω–æ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏)
        rows.append(rating_buttons)

    keyboard = InlineKeyboardMarkup(inline_keyboard=rows)
    logger.info(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è —Ñ–∏–ª—å–º–∞ ID: {movie_id} (0-10).")
    return keyboard


def get_confirmation_keyboard(action: str, payload: str = "") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è (–î–∞/–ù–µ—Ç).
    Args:
        action (str): –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'clear_history', 'clear_prefs').
        payload (str): –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ —Ç—Ä–µ–±—É—é—Ç—Å—è –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è.
    """
    callback_data_yes = f"confirm:{action}:{payload}"
    callback_data_no = "cancel"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π 'cancel' –¥–ª—è –æ—Ç–º–µ–Ω—ã

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton("‚úÖ –î–∞", callback_data=callback_data_yes),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data=callback_data_no)
        ]
    ])
    logger.info(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è: {action}.")
    return keyboard


def get_post_action_keyboard(context_type: str = "main_menu") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∞—è –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–º–µ—Å—Ç–æ ReplyKeyboardRemove.
    –£–±—Ä–∞–Ω—ã "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ –≤ "–ë–æ–ª—å—à–µ –æ–ø—Ü–∏–π".
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton("üé¨ –ï—â—ë —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="get_recommendations"),
            InlineKeyboardButton("‚ù§Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ", callback_data="view_saved_movies"),
        ],
        [
            InlineKeyboardButton("üìú –ò—Å—Ç–æ—Ä–∏—è", callback_data="view_history"),
            InlineKeyboardButton("‚úçÔ∏è –û—Ç–∑—ã–≤", callback_data="start_feedback")
        ]
    ])
    logger.info(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 'post_action' –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {context_type}.")
    return keyboard


def get_back_keyboard(target: str = "main_menu") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π 'üîô –ù–∞–∑–∞–¥'.

    Args:
        target (str): –¶–µ–ª–µ–≤–æ–µ –º–µ—Å—Ç–æ, –∫—É–¥–∞ –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –∫–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥' (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'main_menu', 'preferences').
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f"back:{target}")]
    ])
    logger.info(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ '–ù–∞–∑–∞–¥' —Å —Ü–µ–ª—å—é: {target}.")
    return keyboard

